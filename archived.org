* ideas
** function interaction 
Most challenging part of the process is communicating the result of thousands of different tests to the user. It's better to give results in terms of function behavior, and group functions with common characteristics and give guidelines of writing tests for each group.
*** possible groups
It should be obvious to determine getters and setters of the same member, and then decide how others interact
**** does not affect other functions
mostly getters. There has to be some spectrum of how much the function mutates the structure. But these ones will be affected by others.
**** affects other functions
***** how many?
***** what is the change in behavior
***** maybe the affected ones form the group themselves?
**** behavior on repeated calls
**** input dependent
how different inputs change function behavior and interaction with other functions
*** how to measure 
each test will contain a group of functions. Get a set and update results for each. But each will have a different context in that particular sequence. And maybe it appears several times and each one gives us new information that is not connected to others -> will need another sequence result to find out. 
**** types of information gathered
***** during the execution
***** after the execution (connecting the dots)
*** challenges
Will need to examine existing codebases to detect patterns
**  what information to extract during processing
right now it's recorded by function call (simple bool started) maybe I should record guards by each function in the sequence and see how calling other functions affects its guards 
